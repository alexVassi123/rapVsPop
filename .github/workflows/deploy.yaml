name: Deploy on Kubernetes
permissions:
  id-token: write
  contents: read

on:
  workflow_run:
    workflows: ["Retrain Model"]
    types: completed
jobs:
  download:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env: 
      location: westeurope
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }} 
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure â€” Download model
        uses: azure/cli@v2.1.0
        with:
          azcliversion: latest
          inlineScript: |
            az extension add --name ml -y
            az configure --defaults group=${{ secrets.RG }} workspace=${{ secrets.WG}} location=$LOCATION

            VERSION=$(az ml model list -n rap-versus-pop-classifier \
                      --query "[0].version" -o tsv)

            echo "Found model version: $VERSION"

            az ml model download \
              -n rap-versus-pop-classifier \
              -v $VERSION \
              --download-path inference/rapversus-pop-classifier/best_model.h5

      - name: Upload inference artifact
        uses: actions/upload-artifact@v4
        with:
          name: inference-package
          path: inference   

  redeploy:
    runs-on: self-hosted
    needs: download
    env: 
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t vasale01/backend:${IMAGE_TAG} -f ./app/backend/Dockerfile .
          docker push vasale01/backend:${IMAGE_TAG}

      - name: set up kubectl
        uses: azure/k8s-set-context@v1
        with: 
          kubeconfig: ${{ secrets.KUBECONFIG }}

      # - name: apply manifests
      #   run: |
      #     kubectl apply -f k8s/backend.yaml
  
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/backend-api \
            backend-api=vasale01/backend:${IMAGE_TAG}
          kubectl rollout status deployment/backend-api
